#!/usr/bin/env bash

#load the hex into something i can work with
MYHEX=$1

if ! command -v bc &> /dev/null
then
    printf "bc not found, please install bc from your package manager\n\n(for example, sudo apt install bc, for debian-based distros)\n"
    exit 1
fi


if [[ $1 == "info" ]]; then
	printf "castly is made by me; rgbmew, aka cthrn\n"
	printf "https://github.com/rgbmew/castly/\n"
	printf "my website: https://rgbmew.neocities.org/\n"
	printf "and if you appreciate my work, consider giving me money via bandcamp LOL https://cthrn.bandcamp.com/\n\n"
	printf "i wanted a simple way to change my accent color on GNOME, as the PR for custom accent colors is essentially dead, and alternatives like Gradience or Material You are just too complicated, and too dependency-heavy for my liking\n\n"
	printf "castly requires very few packages, just \033[1mbash\033[0m, \033[1mgnu utils\033[0m, and \033[1mbc\033[0m\n\n\n"
	printf "Q: It works on GTK4 apps, but not adw-gtk3; what shall i do\?!\?!\?\?!\?!\n"
	printf "A: symlink ~/.config/gtk-4.0/gtk.css to ~/.config/gtk-3.0/gtk.css, and everything will work automatically :)\n\n"
	printf "Q: It works on natively-installed apps, but not flatpaks\?!\?!\?\?!\?!\n"
	printf "A: flatpak override --user --filesystem=xdg-config/gtk-3.0:ro --filesystem=xdg-config/gtk-4.0:ro\n\n"
	printf "Q: What's a good app for generating hex codes for my wallpaper?\n"
	printf "A: I really like Paleta, in combination with Eyedropper, if I need more shades of the same color.\n"
	printf "https://github.com/nate-xyz/paleta\n"
	printf "https://github.com/FineFindus/eyedropper\n\n\n"
	printf "known limitations that im unlikely to fix myself (consider submitting a PR!):\n"
	printf " - GNOME Shell doesn't use the accent color (i would have to compile an entire shell theme, too many dependencies)\n"
	printf " - you have to reload all of your apps for new accent colors to take effect\n"
	printf "(more info - https://gitlab.gnome.org/GNOME/gtk/-/issues/3409)\n"
	printf " - apps that force dark mode may look weird on light themes\n"
	printf " - accent colors may not work on non-gtk apps, for example Telegram or KolourPaint\n\n"
	printf "THE SOFTWARE IS PROVIDED “AS IS” or some shit idk im not a lawyer\n"
	exit
fi

#check for errors
if ! [[ ${#MYHEX} == 6 && $2 =~ ^("light"|"dark"|"titlelight"|"titledark"|"sidebarlight"|"sidebardark"|"bothlight"|"bothdark"|"no")$ ]]; then
	printf "usage: castly <hex> <mode> <amount> <titlebar amount> <sidebar amount>\n\n"
	printf "hex color should NOT contain #\n"
	printf "all 3 amounts are optional (default 0.1, 0.2, 0.175)\n\n"
	printf "modes: light, dark, titlelight, titledark, sidebarlight, sidebardark, bothlight, bothdark, no\n"
	printf "  title<light/dark>: tint the selection accent color & the titlebar\n"
	printf "  sidebar<light/dark>: tint the selection accent color & the sidebar\n"
	printf "  both<light/dark>: tint the titlebar, sidebar, & the selection accent color\n"
	printf "  no: only change the selection accent color\n\n"
	printf "example: castly 95AEA3 bothlight 0.2 0.6 0.4\n"
	printf "or: castly 95AEA3 light\n\n"
	printf "\033[31;4mTHIS PROGRAM WILL DELETE YOUR GTK.CSS\033[0m. \033[31;4mMAKE A BACKUP\033[0m!!!!!!!!!!!!!!!!!!\n\n"
	printf "you can also run \"castly info\" for more information about castly!\n"
	exit
fi

#I STOLE THIS HEX CONVERSION CODE FROM @nberlette ON GITHUB. THANK YOU FOR NOT SUING ME EVEN THOUGH I DIDNT ASK FOR PERMISSION
function hex() {
    printf "%02X%02X%02X" ${*//','/' '}
}
[ $(basename -- $0) == "hex" ] && [ $# -gt 0 ] && echo $(hex "${*}")

#convert the hex to rgb so i can work with the values later
R=$(printf %d 0x${MYHEX:0:2})
G=$(printf %d 0x${MYHEX:2:2})
B=$(printf %d 0x${MYHEX:4:2})

#load user defined or default values
if [[ $3 != "" ]]; then
	AMOUNT=$3
else
	AMOUNT="0.1"
fi
HOMEAMOUNT=$(echo 1-$AMOUNT|bc)

#the titlebar can be tinted a different amount
if [[ $4 != "" ]]; then
	TITLEAMOUNT=$4
else
	TITLEAMOUNT=$(echo "$AMOUNT+$AMOUNT" | bc)
fi
TITLEHOMEAMOUNT=$(echo "1-$TITLEAMOUNT" | bc)

#the sidebar can be tinted a different amount
if [[ $5 != "" ]]; then
	SIDEAMOUNT=$5
else
	SIDEAMOUNT=$(echo "scale=3; ($AMOUNT*1.75)/1" | bc)
fi
SIDEHOMEAMOUNT=$(echo "1-$SIDEAMOUNT" | bc)

#the original adwaita ui colors so i can tint them (the R, G, and B are all the same)
if [[ $2 == "light" || $2 == "titlelight" || $2 == "sidebarlight" || $2 == "bothlight" ]]; then
	COL="255"
else
	COL="30"
fi

#delete the original gtk.css file so im not just adding and adding and adding to make a 37mb css file lol
if test -f ~/.config/gtk-4.0/gtk.css; then
	rm ~/.config/gtk-4.0/gtk.css
fi

#and write my stuff
echo "@define-color accent_color #"$1";" >> ~/.config/gtk-4.0/gtk.css
echo "@define-color accent_bg_color #"$1";" >> ~/.config/gtk-4.0/gtk.css

#TITLEBAR
if [[ $2 == "light" || $2 == "dark" || $2 == "titlelight" || $2 == "titledark" || $2 == "bothlight" || $2 == "bothdark" ]]; then
	#do the tinting calculation on the RGB values
	COLR=$(echo "scale=0; ($COL*$TITLEHOMEAMOUNT + $R*$TITLEAMOUNT)/1" | bc)
	COLG=$(echo "scale=0; ($COL*$TITLEHOMEAMOUNT + $G*$TITLEAMOUNT)/1" | bc)
	COLB=$(echo "scale=0; ($COL*$TITLEHOMEAMOUNT + $B*$TITLEAMOUNT)/1" | bc)
	TITLECOL=$(hex $COLR $COLG $COLB) #then convert to hex!
	
	echo "@define-color headerbar_bg_color #"$TITLECOL";" >> ~/.config/gtk-4.0/gtk.css
fi

#SIDEBAR
if [[ $2 == "light" || $2 == "dark" || $2 == "sidebarlight" || $2 == "sidebardark" || $2 == "bothlight" || $2 == "bothdark" ]]; then
	COLR=$(echo "scale=0; ($COL*$SIDEHOMEAMOUNT + $R*$SIDEAMOUNT)/1" | bc)
	COLG=$(echo "scale=0; ($COL*$SIDEHOMEAMOUNT + $G*$SIDEAMOUNT)/1" | bc)
	COLB=$(echo "scale=0; ($COL*$SIDEHOMEAMOUNT + $B*$SIDEAMOUNT)/1" | bc)
	SIDECOL=$(hex $COLR $COLG $COLB)
	
	#the order of operations here is important because $COL initially equals an RGB value, but i re-use the variable for the hex... for some reason? im tired
	COLR=$(echo "scale=0; ($COL*$HOMEAMOUNT + $R*$AMOUNT)/1" | bc)
	COLG=$(echo "scale=0; ($COL*$HOMEAMOUNT + $G*$AMOUNT)/1" | bc)
	COLB=$(echo "scale=0; ($COL*$HOMEAMOUNT + $B*$AMOUNT)/1" | bc)
	COL=$(hex $COLR $COLG $COLB)
	
	echo "@define-color sidebar_bg_color #"$SIDECOL";" >> ~/.config/gtk-4.0/gtk.css
	echo "@define-color sidebar_backdrop_color #"$COL";" >> ~/.config/gtk-4.0/gtk.css
	
	echo "@define-color secondary_sidebar_bg_color #"$SIDECOL";" >> ~/.config/gtk-4.0/gtk.css
	echo "@define-color secondary_sidebar_backdrop_color #"$COL";" >> ~/.config/gtk-4.0/gtk.css
fi
if [[ $2 == "light" || $2 == "dark" ]]; then
	echo "@define-color window_bg_color #"$COL";" >> ~/.config/gtk-4.0/gtk.css
	echo "@define-color view_bg_color #"$COL";" >> ~/.config/gtk-4.0/gtk.css
fi

#set the text color so even if you accidentally select the wrong light/dark mode, its still navigable (if ugly)
#i would make light/dark automatic, but as far as im aware, GTK has no way of dynamically reloading gtk.css https://gitlab.gnome.org/GNOME/gtk/-/issues/3409
if [[ $2 == "light" || $2 == "sidebarlight" || $2 == "titlelight" || $2 == "bothlight" ]]; then
	echo "@define-color window_fg_color rgba(0, 0, 0, 0.8);" >> ~/.config/gtk-4.0/gtk.css
	echo "@define-color view_fg_color rgba(0, 0, 0, 0.8);" >> ~/.config/gtk-4.0/gtk.css
	echo "@define-color headerbar_fg_color rgba(0, 0, 0, 0.8);" >> ~/.config/gtk-4.0/gtk.css
	echo "@define-color sidebar_fg_color rgba(0, 0, 0, 0.8);" >> ~/.config/gtk-4.0/gtk.css
	echo "@define-color secondary_sidebar_fg_color rgba(0, 0, 0, 0.8);" >> ~/.config/gtk-4.0/gtk.css
elif [[ $2 == "dark" || $2 == "sidebardark" || $2 == "titledark" || $2 == "bothdark" ]]; then
	echo "@define-color window_fg_color #FFFFFF;" >> ~/.config/gtk-4.0/gtk.css
	echo "@define-color view_fg_color #FFFFFF;" >> ~/.config/gtk-4.0/gtk.css
	echo "@define-color headerbar_fg_color #FFFFFF;" >> ~/.config/gtk-4.0/gtk.css
	echo "@define-color sidebar_fg_color #FFFFFF;" >> ~/.config/gtk-4.0/gtk.css
	echo "@define-color secondary_sidebar_fg_color #FFFFFF;" >> ~/.config/gtk-4.0/gtk.css
fi

#yippee!
echo "done! reload your apps and it should work :)"

#created by rgbmew :)
